systemd:
  units:
    - name: kubelet.service
      enable: true
      contents: |
        [Unit]
        Description=Kubernetes Kubelet
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        Requires=coreos-metadata.service
        After=coreos-metadata.service
        Requires=docker.service
        After=docker.service

        [Service]
        EnvironmentFile=/run/metadata/coreos
        ExecStart=/opt/k8s/bin/kubelet \
          --allow-privileged=true \
          --address=$${COREOS_DIGITALOCEAN_IPV4_PRIVATE_0} \
          --bootstrap-kubeconfig=/opt/k8s/kubelet/bootstrap-kubeconfig \
          --cert-dir=${cert_dir} \
          --cluster-dns=${cluster_dns_ip} \
          --cluster-domain=${cluster_domain} \
          --container-runtime=docker \
          --docker-endpoint=unix://var/run/docker.sock \
          --enable-custom-metrics \
          --image-pull-progress-deadline=2m \
          --kubeconfig=${kubelet_kubeconfig} \
          --register-node=true \
          --require-kubeconfig=true \
          --root-dir=/opt/k8s/kubelet \
          --runtime-request-timeout=10m \
          --v=2
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target

    - name: kube-proxy.service
      enable: true
      contents: |
        [Unit]
        Description=Kubernetes Kube Proxy
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes

        [Service]
        ExecStart=/opt/k8s/bin/kube-proxy \
          --config=/opt/k8s/kube-proxy/config
        Restart=on-failure
        RestartSec=5

        [Install]
        WantedBy=multi-user.target

storage:
  files:
    - path: /etc/systemd/resolved.conf.d/00-droplet.conf
      filesystem: root
      mode: 0644
      user:
        id: 0
      group:
        id: 0
      contents:
        inline: |
          [Resolve]
          DNS=${dns_server}
          Domains=${domain}
          LLMNR=yes
          DNSSEC=allow-downgrade
          Cache=yes
          DNSStubListener=udp

update:
  group: ${update_channel}

locksmith:
  reboot_strategy: etcd-lock
  window_start: ${maintenance_window_start}
  window_length: ${maintenance_window_length}
  etcd_endpoints: https://{PRIVATE_IPV4}:${etcd_client_port}
  etcd_cafile: ${cacert_file}
  etcd_certfile: ${cert_file}
  etcd_keyfile: ${key_file}
